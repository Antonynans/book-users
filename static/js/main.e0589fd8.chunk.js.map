{"version":3,"sources":["components/AddUserForm.js","components/table/userTable.js","components/EditUserForm.js","components/BookData.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","id","name","username","useState","user","setUser","handleInputChanege","e","target","value","className","onSubmit","preventDefault","addUser","type","onChange","UserTable","users","length","map","onClick","editRow","deleteUser","colSpan","EditUserForm","currentUser","useEffect","updateUser","setEditing","BookData","setUsers","editing","setCurrentUser","style","color","filter","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0589fd8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\n\nexport default function AddUserForm(props) {\n    const initialFormState = {\n        id: null,\n        name: '',\n        username: ''\n    }\n    const [user, setUser] = useState({initialFormState})\n\n    const handleInputChanege = e => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if(user.name && user.username)\n             props.addUser(user)\n            setUser(initialFormState)\n    }\n\n    return (\n        <form className='form' onSubmit={handleSubmit}> \n            <label>Name</label>\n            <input className='form-input' type='text' name='name' value={user.name} onChange={handleInputChanege} />\n            <label>Username</label>\n            <input className='form-input' type='text' name='username' value={user.username} onChange={handleInputChanege} />\n            <button className='form-button'>Add new user</button>\n        </form>\n    ) \n}\n","import React from 'react'\n\nconst UserTable = (props) => (\n    <table>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Username</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            {props.users.length > 0 ? (\n                props.users.map((user) => (\n\n                \n            <tr key={user.id}>\n                <td>{user.name}</td>\n                <td>{user.username}</td>\n                <td>\n                    <button className='mutted-button success'\n                    onClick={() => {props.editRow(user)}}>Edit</button>\n                    <button className='mutted-button danger'\n                    onClick={() => props.deleteUser(user.id)}>Delete</button>\n                </td>\n            </tr>\n            ))\n            ) : (\n              <tr>\n                <td colSpan={3}>No users</td>\n              </tr>\n            )}\n        </tbody>\n    </table>\n)\n\nexport default UserTable\n","import React, { useEffect, useState } from 'react';\n\n\nexport default function EditUserForm(props) {\n    const [user, setUser] = useState(props.currentUser);\n\n    const handleInputChanege = e => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n            props.updateUser(user.id, user)\n    }\n\n    useEffect(() => {\n        setUser(props.currentUser)\n    }, [props])\n\n    return (\n        <form className='form' onSubmit={handleSubmit}>\n            <label>Name</label>\n            <input className='form-input' type='text' name='name' value={user.name} onChange={handleInputChanege} />\n            <label>Username</label>\n            <input className='form-input' type='text' name='username' value={user.username} onChange={handleInputChanege} />\n            <div className='button-container'>\n                <button className='form-button success'>Update user</button>\n                <button className='form-button danger' onClick={() => props.setEditing(false)}>Cancel</button>\n            </div>\n        </form>\n    )\n}\n","import React, { useState } from 'react'\nimport AddUserForm from './AddUserForm';\nimport UserTable from './table/userTable'; \nimport EditUserForm from './EditUserForm';\n\n\nexport default function BookData() {\n    const [users, setUsers] = useState(\n        [\n            {id: 1, name: 'Tania', username: 'Dj' },\n            {id: 2, name: 'Ben', username: 'MrBen' },\n            {id: 3, name: 'John', username: 'Johnny' }\n        ]\n    )\n\n    const [editing, setEditing] = useState(false);\n    const initialFormState = {id: null, name: '', username: '' }\n    const [currentUser, setCurrentUser] = useState(initialFormState)\n    const editRow = (user) => {\n        setEditing(true)\n        setCurrentUser({ id: user.id, name: user.name, username: user.username})\n    }\n    const updateUser = (id, updateUser) => {setEditing(false)\n\n    setUsers(users.map((user) => (user.id === id ? updateUser : user)))\n    }\n\n    const addUser = (user) => {\n        user.id = users.length + 1\n        setUsers([...users, user])\n    }\n\n    const deleteUser = (id) => {\n        setUsers(users.filter((user) => user.id !== id))\n    }\n\n   \n    return (\n        <div className=\"container\">\n            <h1 style={{color: 'rgb(255, 0, 191)'}}>CRUD App with Hooks</h1>\n            <div className='flex-row'>\n                <div className='flex-large'>\n                    {editing ? (\n                        <div>\n                            <h2 style={{color: 'green'}}>Edit User</h2>\n                            <EditUserForm\n                                setEditing={setEditing}\n                                currentUser={currentUser}\n                                updateUser={updateUser}\n                            />\n                        </div>\n                    ) : (\n                        <div>\n                        <h2>Add User</h2>\n                        <AddUserForm addUser={addUser} />\n                    </div>\n                    )}\n                </div>\n                <div className='flex-large'>\n                    <h2>View Users</h2>\n                    <UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n                </div>\n            </div>\n        </div>\n       \n    )\n}\n","// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport BookData from './components/BookData';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>\n    <Route path=\"/\" component={BookData} />\n\n    </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}